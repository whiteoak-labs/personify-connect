Ext.define("Personify.view.schedule.ScheduleMonthList",{extend:"Ext.dataview.List",xtype:"tabletschedulemonthlist",config:{baseCls:"selectedFieldButtonNews",scrollToTopOnRefresh:false,itemTpl:new Ext.XTemplate('<tpl if = "expanded">','<div class = "p-filter-button-new-enabled">{[this.formatMonth(values.month, values.year)]}',"</div>",'<tpl for = "events">','<div class = "eventItems eventItemPanel-{#}" style = "width: 100%; float: left; background: none; padding-bottom: 3px; display: -webkit-box;">','<div class = "dayInfoPanel" style = "display: -webkit-box; -webkit-box-orient: vertical;">','<div class = "eventDay eventItemIndex-{#}">{[Personify.utils.ItemUtil.getDayEventView(values.data.startDateTime)]}</div>','<div class = "eventMonth  eventItemIndex-{#}">{[Personify.utils.ItemUtil.getMonthEventView(values.data.startDateTime)]}</div>','<div style = "-webkit-box-pack: end; -webkit-box-flex: 1.0; display: -webkit-box; -webkit-box-orient: vertical;">','<div class = "eventStatus eventItemIndex-{#}">{[this.getType(values.data)]}</div>',"</div>","</div>",'<div class = "eventItemContent eventItemIndex-{#}" style = "-webkit-box-flex: 1.0;">','<div class = "eventItemIndex-{#}">{[Personify.utils.ItemUtil.getDisplayTimeForEvent(values.data.startDateTimeString, values.data.endDateTimeString)]}</div>','<div class = "eventSummary eventItemIndex-{#}">{[this.displayName(values.data.title)]}</div>','<div class = "locationEvent eventItemIndex-{#}">','<div class = "eventLocation eventItemIndex-{#}">{[this.displayName(values.data.location)]}</div>','<div style="float:right" class="x-button-normal x-button p-phone-button-removeschedule removebutton-{#} eventItemIndex-{#}">','<span class="x-button-label removebutton-{#} eventItemIndex-{#}">Remove</span>',"</div>","</div>","</div>","</div>","</tpl>","<tpl else>",'<div class = "p-filter-button-new">{[this.formatMonth(values.month, values.year)]}',"</div>","</tpl>",{displayName:function(a){return a},formatMonth:function(b,a){var c=new Date("01/01/2013");c.setFullYear(a);c.setMonth(b);return Ext.Date.format(c,"F, Y")},isMembersOnly:function(a){if(a==false){return""}else{return'<div class = "eventStatus">Member Only</div>'}},getType:function(a){var c=a.type;var b=a.meetingId;var d=a.sessionID;if(c.toUpperCase()=="PERSONAL"){return"PERSONAL "}else{if(d&&d!=0){return"SESSION "}else{return"MEETING"}}}}),listeners:{itemtap:function(l,h,j,f,k,m){var g=false;var h=null;var a=false;var c=k.target.classList;for(var d=0,b=c.length;d<b;d++){if(c[d].indexOf("eventItemIndex")>=0){g=true;h=c[d].split("-")[1];break}else{if(c[d].indexOf("removebutton")>=0){a=true;h=c[d].split("-")[1];break}}}if(g){this.fireEvent("eventitemlistselect",f.get("events")[h-1])}else{if(a){this.fireEvent("removeagenda",f.get("events")[h-1])}else{f.set("expanded",!f.get("expanded"))}}},itemtouchstart:function(m,p,k,g,l,n){var h=false;var j=null;var b=l.target.classList;for(var f=0,a=b.length;f<a;f++){if(b[f].indexOf("eventItemIndex")>=0){h=true;j=b[f].split("-")[1];break}}if(h){var d=".eventItemPanel-"+j;var o=m.getItemAt(p);var c="";if(Ext.isElement(o)){o=Ext.get(o)}if(o){if(o.isComponent){c=o.renderElement.down(d)}else{c=o.down(d)}}c.addCls("p-dataview-pressed")}},itemtouchend:function(m,p,k,g,l,n){var h=false;var j=null;var b=l.target.classList;for(var f=0,a=b.length;f<a;f++){if(b[f].indexOf("eventItemIndex")>=0){h=true;j=b[f].split("-")[1];break}}if(h){var d=".eventItemPanel-"+j;var o=m.getItemAt(p);var c="";if(Ext.isElement(o)){o=Ext.get(o)}if(o){if(o.isComponent){c=o.renderElement.down(d)}else{c=o.down(d)}}c.removeCls("p-dataview-pressed")}}}}});