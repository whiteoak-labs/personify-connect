Ext.define("Personify.view.event.map.PinchZoomImage",{extend:"Ext.Container",xtype:"pinchzoomimage",requires:["Personify.view.event.map.Transform"],config:{src:null,isFrozen:false,scaleFactor:1.2,useMouseWheelEvent:true,styleHtmlContent:true,layout:"vbox",flex:1,scrollable:true,items:[{html:'<canvas style="position:absolute;top:0px;left:0px;width:100%;height:100%;"/>'},{xtype:"label",itemId:"marker",top:0,left:0,width:20,height:70,style:'background-image: url("img/event/map/checkpoint.png"); background-repeat:no-repeat; background-size:100%;background-position: center center;'}],listeners:{scope:this,painted:function(a){a.redraw()},doubletap:{fn:function(c,a,b){if(this.getIsFrozen()){return}this.redraw()},element:"element",delegate:"canvas"},dragstart:{fn:function(c,a,b){if(this.getIsFrozen()){return}this.lastX=c.pageX;this.lastY=c.pageY;document.body.style.mozUserSelect=document.body.style.webkitUserSelect=document.body.style.userSelect="none";this.dragStart=this.ctx.transformedPoint(this.lastX,this.lastY);this.dragged=false},element:"element",delegate:"canvas"},dragend:{fn:function(c,a,b){this.dragged=false;if(this.getIsFrozen()){return}this.lastX=c.pageX;this.lastY=c.pageY;this.dragStart=null},element:"element",delegate:"canvas"},drag:{fn:function(d,a,c){if(this.getIsFrozen()){return}this.lastX=d.pageX;this.lastY=d.pageY;if(this.dragStart){var b=this.ctx.transformedPoint(this.lastX,this.lastY);this.ctx.translate(b.x-this.dragStart.x,b.y-this.dragStart.y);this.draw()}this.lastX=d.offsetX||(d.pageX-this.canvas.offsetLeft);this.lastY=d.offsetY||(d.pageY-this.canvas.offsetTop)},element:"element",delegate:"canvas"},pinchstart:{fn:function(c,a,b){if(this.getIsFrozen()){return}this.pinchScale=1;this.lastX=c.pageX;this.lastY=c.pageY;this.dragged=false},element:"element",delegate:"canvas"},pinchend:{fn:function(c,a,b){if(this.getIsFrozen()){return}this.pinchScale=1;this.lastX=c.pageX;this.lastY=c.pageY;dragged=false},element:"element",delegate:"canvas"},pinch:{fn:function(c,a,b){if(this.getIsFrozen()){return}this.zoom((c.scale-this.pinchScale)*100/5);this.pinchScale=c.scale;this.dragged=true},element:"element",delegate:"canvas"}}},lastX:0,lastY:0,image:null,canvas:null,ctx:null,srcX:0,srcY:0,srcWidth:null,srcHeight:null,destWidth:null,destHeight:null,ratioWidth:null,ratioHeight:null,canvasWidth:null,canvasHeight:null,markerPos:null,markerOffset:{x:0,y:0},pinchScale:0,isScaled:false,applySrc:function(b){if(b!=null&&b!=""){var a=this.getImage();a.src=b}return b},getImage:function(){if(this.image==null){this.image=new Image();this.image.onload=(function(a){return function(){a.onLoadImage()}})(this);this.image.onerror=this.onErrorImage;this.image.onabor=this.onAbortImage}return this.image},resetCanvas:function(){if(this.canvas!=null){this.isScaled=false;this.zoomValue=0;this.ctx.reset();if(this.element){this.canvas.width=this.element.getWidth();this.canvas.height=this.element.getHeight()}else{this.canvas.width=0;this.canvas.height=0}this.lastX=this.canvasWidth/2;this.lastY=this.canvasHeight/2;this.markerPos=this.ctx.transformedPoint(this.canvas.width/2,this.canvas.height/2)}},handleScroll:function(a){if(!this.getUseMouseWheelEvent()){return}var b=a.wheelDelta?a.wheelDelta/40:a.detail?-a.detail:0;if(b){this.zoom(b)}return a.preventDefault()&&false},trackTransforms:function(h){var f=Ext.create("Personify.view.event.map.Transform");h.getTransform=function(){return f};var g=[];var d=h.save;h.save=function(){g.push(f.translate(0,0));return d.call(h)};var e=h.restore;h.restore=function(){f=g.pop();return e.call(h)};var a=h.translate;h.translate=function(k,j){f.translate(k,j);return a.call(h,k,j)};h.reset=function(k,j){f.reset()};var b=h.scale;h.scale=function(k,j){f.scale(k,j);return b.call(h,k,j)};var i={x:0,y:0};var c=h.setTransform;h.transformedPoint=function(j,n){var l=f.clone();l.invert();var m=l.transformPoint(j,n);var k={x:m[0],y:m[1]};return k};h.transformPoint=function(j,m){var l=f.transformPoint(j,m);var k={x:l[0],y:l[1]};return k}},zoom:function(a){this.isScaled=true;this.zoomValue+=a;var c=this.ctx.transformedPoint(this.lastX,this.lastY);this.ctx.translate(c.x,c.y);var b=Math.pow(this.getScaleFactor(),a/2);this.ctx.scale(b,b);this.ctx.translate(-c.x,-c.y);this.draw()},redraw:function(){this.resetCanvas();this.draw()},draw:function(){if(this.image.complete==true&&this.ctx!=null){this.lastX=this.canvas.width/2;this.lastY=this.canvas.height/2;var d=this.ctx.transformedPoint(0,0);var c=this.ctx.transformedPoint(this.canvas.width,this.canvas.height);this.ctx.fillRect(d.x,d.y,c.x-d.x,c.y-d.y);this.srcWidth=this.image.width;this.srcHeight=this.image.height;this.destWidth=this.canvas.width;this.destHeight=this.canvas.height;this.ratioWidth=this.srcWidth/this.destWidth;this.ratioHeight=this.srcHeight/this.destHeight;if(this.ratioWidth>this.ratioHeight){this.destHeight=this.srcHeight/this.ratioWidth}else{this.destWidth=this.srcWidth/this.ratioHeight}this.destX=(this.canvas.width-this.destWidth)/2;this.destY=(this.canvas.height-this.destHeight)/2;if(this.markerOffset){this.ctx.drawImage(this.image,this.canvas.width/2-this.markerOffset.x,this.canvas.height/2-this.markerOffset.y)}else{this.ctx.drawImage(this.image,this.canvas.width/2-this.srcWidth/2,this.canvas.height/2-this.srcHeight/2)}var b=this.ctx.transformPoint(this.markerPos.x,this.markerPos.y);var a=this.down("#marker");if(a){a.setLeft(b.x-a.getWidth()/2);a.setTop(b.y-a.getHeight())}}},updateMarkerPosition:function(a){if(a){this.markerOffset=a;this.showMarker(true)}else{this.markerOffset=null;this.showMarker(false)}this.redraw()},showMarker:function(a){if(a){this.down("#marker").show()}else{this.down("#marker").hide()}},onLoadImage:function(){this.initCanvas();this.redraw()},onErrorImage:function(){},onAbortImage:function(){},initCanvas:function(){if(!this.element){return}this.canvas=Ext.DomQuery.select("canvas",this.element.dom)[0];this.ctx=this.canvas.getContext("2d");this.trackTransforms(this.ctx);this.canvas.addEventListener("mousewheel",(function(a){return function(b){a.handleScroll(b)}})(this),false);this.resetCanvas()},initialize:function(){this.callParent(arguments);this.initCanvas()}});