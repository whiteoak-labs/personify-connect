Ext.define("Personify.controller.profile.Phone",{extend:"Personify.controller.profile.template.InfoTemplate",requires:["Personify.view.profile.contactinfo.phone.PhoneList","Personify.view.profile.contactinfo.PhoneEditForm"],config:{countryListStore:null,typeList:null,typeListToRemove:null,recordsForDelete:new Array(),errorMessage:"\n- Wrong phone format:",blankErrorMessage:"- Phone field cannot be empty",primaryAddressCountry:null,canAddMoreFlag:null},control:{infoContainer:{typelistchange:"onTypeListChange",textboxchange:"onTextboxChange",deleteCommand:"onDeleteCommand"}},updateEditMode:function(f,g){this.callParent(arguments);if(g){this.setCountryListStore(g)}var e=this;var c=this.getInfoContainer();c.removeAll(true,true);if(f==true){this.getView().setHidden(false);var h=new Array();var d=e.getView().getRecord();this.setTypeList(d.get("communicationLocationList").split(","));var b=d.EntryProfile.getAt(0).AddressesProfile;if(b){b.each(function(i){if(i.get("primary")&&i.get("primary")==true){e.setPrimaryAddressCountry(i.get("country"))}})}var a=d.EntryProfile.getAt(0).PhoneNumbersProfile;a.each(function(i){var j=Ext.create("Personify.view.profile.contactinfo.PhoneEditForm");j.getController().hideCountryList(false,g);j.getController().setTypeList(e.getTypeList());j.setRecord(i);c.add(j);h.push(i.get("type"))});this.setTypeListToRemove(h);this.addEmptyItem();this.updateTypeListForAllEditItems()}else{e.setRecord(e.getView().getRecord())}},onTextboxChange:function(h,f,e,c,d){var b=this.getInfoContainer();var i=Personify.utils.ServiceManager.getModelManager();var a=i.getProfilePhoneNumbersModel();var g=new Ext.create(a,{primary:e,value:c,type:d});if(!f){h.setRecord(g);this.addEmptyItem();this.updateTypeListForAllEditItems()}},onDeleteCommand:function(a,b){if(a.get("phoneNumbersId")!=""){this.getRecordsForDelete().push(a)}Ext.Array.remove(this.getTypeListToRemove(),a.get("type"));this.updateTypeListForAllEditItems();this.getInfoContainer().remove(b,true);var d=this.getInfoContainer().getInnerItems();var c=d[d.length-1];if(c.getRecord()&&!c.getRecord().get("primary")){this.addEmptyItem()}},onTypeListChange:function(a,b,c){this.callParent(arguments);if(a.getRecord()){if(a.getRecord().get("phoneNumbersId")!=""){this.getRecordsForDelete().push(a.getRecord().copy())}a.getRecord().set("phoneNumbersId","")}},validation:function(){return""},addEmptyItem:function(){var c=this.checkTypeList();if(c.length==0){this.setCanAddMoreFlag(false);return}else{this.setCanAddMoreFlag(true)}var b=this.getInfoContainer();var d=Ext.create("Personify.view.profile.contactinfo.PhoneEditForm");d.getController().hideCountryList(false,this.getCountryListStore());d.getController().setTypeList(c);this.getTypeListToRemove().push(c[0]);b.add(d);var a=this.getPrimaryAddressCountry();if(a){d.getController().setCountryForEmptyItem(a)}},setRecord:function(a){if(a){if(a.EntryProfile.getAt(0).PhoneNumbersProfile.getCount()>0){this.getInfoContainer().removeAll(true,true);var b=Ext.create("Personify.view.profile.contactinfo.phone.PhoneList",{scrollable:null,docked:"top",disableSelection:true,style:"margin-left: 50px;"});b.setStore(a.EntryProfile.getAt(0).PhoneNumbersProfile);this.getInfoContainer().add(b);this.getView().setHidden(false)}else{this.getView().setHidden(true)}}},updateParams:function(b){this.updateAllRecordsForEditItems();var a=[];var j=[];var c=this.getRecordsForDelete();var h=this.getInfoContainer().getItems().items;var g=this.getCanAddMoreFlag();var f=(g==false)?h.length:h.length-1;for(var d=0;d<f;d++){var e=h[d].getRecord();a.push(e);Ext.Array.each(c,function(k,i,l){if(k.get("phoneNumbersId").toUpperCase()===e.get("phoneNumbersId").toUpperCase()){j.push(k)}})}c=Ext.Array.difference(c,j);Ext.Array.each(c,function(k,i,l){k.set("markForDelete",true)});a=a.concat(c);phoneNumbersParams=this.getParameterList(a);if(phoneNumbersParams){b.PhoneNumbers=phoneNumbersParams}},getParameterList:function(c){var a=new Array();for(var d=0;d<c.length;d++){var b={InternalKey:c[d].get("internalKey"),NavigationKey:c[d].get("navigationKey"),Id:c[d].get("phoneNumbersId"),Value:c[d].get("value"),Type:c[d].get("type"),Primary:c[d].get("primary"),MarkForDelete:(c[d].get("markForDelete")==null)?false:c[d].get("markForDelete"),Country:c[d].get("country"),PhoneNumbers:null};a[d]=b}return a}});