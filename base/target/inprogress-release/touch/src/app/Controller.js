Ext.define("Ext.app.Controller",{mixins:{observable:"Ext.mixin.Observable"},config:{refs:{},routes:{},control:{},before:{},application:{},stores:[],models:[],views:[]},constructor:function(a){this.initConfig(a);this.mixins.observable.constructor.call(this,a)},init:Ext.emptyFn,launch:Ext.emptyFn,redirectTo:function(a){return this.getApplication().redirectTo(a)},execute:function(b,a){b.setBeforeFilters(this.getBefore()[b.getAction()]);b.execute()},applyBefore:function(e){var d,a,c,b;for(a in e){d=Ext.Array.from(e[a]);c=d.length;for(b=0;b<c;b++){d[b]=this[d[b]]}e[a]=d}return e},applyControl:function(a){this.control(a,this);return a},applyRefs:function(a){if(Ext.isArray(a)){Ext.Logger.deprecate("In Sencha Touch 2 the refs config accepts an object but you have passed it an array.")}this.ref(a);return a},applyRoutes:function(a){var f=this instanceof Ext.app.Application?this:this.getApplication(),c=f.getRouter(),b,e,d;for(e in a){b=a[e];d={controller:this.$className};if(Ext.isString(b)){d.action=b}else{Ext.apply(d,b)}c.connect(e,d)}return a},applyStores:function(a){return this.getFullyQualified(a,"store")},applyModels:function(a){return this.getFullyQualified(a,"model")},applyViews:function(a){return this.getFullyQualified(a,"view")},getFullyQualified:function(b,e){var f=b.length,a=this.getApplication().getName(),c,d;for(d=0;d<f;d++){c=b[d];if(Ext.isString(c)&&(Ext.Loader.getPrefix(c)===""||c===a)){b[d]=a+"."+e+"."+c}}return b},control:function(a){this.getApplication().control(a,this)},ref:function(b){var d=this,f,c,a,e;for(f in b){a=b[f];c="get"+Ext.String.capitalize(f);if(!this[c]){if(Ext.isString(b[f])){e={ref:f,selector:a}}else{e=b[f]}this[c]=function(i,h){var g=[i,h];return function(){return d.getRef.apply(d,g.concat.apply(g,arguments))}}(f,e)}this.references=this.references||[];this.references.push(f.toLowerCase())}},getRef:function(d,e,a){this.refCache=this.refCache||{};e=e||{};a=a||{};Ext.apply(e,a);if(e.forceCreate){return Ext.ComponentManager.create(e,"component")}var c=this,b=c.refCache[d];if(!b){c.refCache[d]=b=Ext.ComponentQuery.query(e.selector)[0];if(!b&&e.autoCreate){c.refCache[d]=b=Ext.ComponentManager.create(e,"component")}if(b){b.on("destroy",function(){c.refCache[d]=null})}}return b},hasRef:function(a){return this.references&&this.references.indexOf(a.toLowerCase())!==-1},onClassExtended:function(p,e){var k=this.prototype,f=k.config,c=e.config||{},j=e.refs,a={},n=e.stores,o=e.views,l=Ext.String.format,d,m,b,g,h;for(m in f){if(m in e&&m!="control"){if(m=="refs"){for(g=0;g<j.length;g++){d=j[g];a[d.ref]=d}c.refs=a}else{c[m]=e[m]}delete e[m];Ext.Logger.deprecate(m+" is deprecated as a property directly on the "+this.$className+" prototype. Please put it inside the config object.")}}if(n){b=n.length;c.stores=n;for(g=0;g<b;g++){h=l("get{0}Store",Ext.String.capitalize(n[g]));k[h]=function(i){return function(){return Ext.StoreManager.lookup(i)}}(n[g])}}if(o){b=o.length;c.views=o;for(g=0;g<b;g++){h=l("get{0}View",o[g]);k[h]=function(i){return function(){return Ext.ClassManager.classes[l("{0}.view.{1}",this.getApplication().getName(),i)]}}(o[g])}}e.config=c},getModel:function(b){Ext.Logger.deprecate("getModel() is deprecated and considered bad practice - please just use the Model name instead (e.g. MyApp.model.User vs this.getModel('User'))");var a=this.getApplication().getName(),c=Ext.ClassManager.classes;return c[a+".model."+b]},getController:function(b,a){Ext.Logger.deprecate("Ext.app.Controller#getController is deprecated and considered bad practice - please use this.getApplication().getController('someController') instead");return this.getApplication().getController(b,a)}},function(){Ext.regController=function(b,a){Ext.apply(a,{extend:"Ext.app.Controller"});Ext.Logger.deprecate("[Ext.app.Controller] Ext.regController is deprecated, please use Ext.define to define a Controller as with any other class. For more information see the Touch 1.x -> 2.x migration guide");Ext.define("controller."+b,a)}});