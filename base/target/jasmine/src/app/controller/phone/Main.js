Ext.define("Personify.controller.phone.Main",{extend:"Personify.base.Controller",inject:["currentUser","shoppingCartStore","notificationStore"],config:{currentUser:null,notificationStore:null,shoppingCartStore:null,countLoad:0,maxCount:4},control:{view:{painted:"onPainted"},mainNavigationView:{animationend:"onAnimationEnded",activeitemchange:"onActiveViewChange"},viewWithBanner:{requestchangeview:"onRequestChangeView"},menuBar:{requestchangeview:"onRequestChangeViewDelay",backtomain:"onBackToMainDelay",checkoutshoppingcart:"onTapCartItemCheckout"}},init:function(){if(Ext.os.is.Android){window.plugins.androidHelper.setPortrait()}Ext.Viewport.addListener("keyboardhide",this.onHideKeyBoard,this);Ext.Viewport.addListener("keyboardshow",this.onShowKeyBoard,this);this.onUpdateCurrentUser(Personify.utils.Configuration.getCurrentUser())},onHideKeyBoard:function(){this.getMenuBar().setHidden(false);this.getMainNavigationView().setStyle("margin-bottom:0px;")},onShowKeyBoard:function(){this.getMenuBar().setHidden(true);this.getMainNavigationView().setStyle("margin-bottom:-52px;")},onPainted:function(){var a=this;var b=function(){navigator.splashscreen.hide()};Ext.callback(b,a,[],1000)},openView:function(h,b,i,e){var f=this;f.getMenuBar().getController().closeMenuBar();if(b&&b!=null){if(b.record.get("neededLogin")&&!this.getCurrentUser().isLogged()){Personify.utils.ItemUtil.needToLogin();return}}if(typeof h=="string"){h=Ext.create(h,b)}h.addListener("back",this.onBack,this);h.addListener("loggedout",this.onLogout,this);h.addListener("backtomain",this.onBackToMainDelay,this);h.addListener("requestchangeview",this.onRequestChangeView,this);h.addListener("removeagenda",this.getObjectDelectMeetingAgenda,this);h.addListener("addagenda",this.addNewCustomerMeetingAgenda,this);h.addListener("refreshagenda",this.onUpdateMySchedule,this);h.addListener("updatecurrentuser",this.onUpdateCurrentUser,this);h.addListener("setTextNotiBtnPhone",this.setTextNotiBtnPhone,this);h.addListener("enableBtnOpenNotificationPhone",this.enableBtnOpenNotificationPhone,this);if(b&&b!=null){var g=b.record.get("listeners");if(g){for(var a in g){this.getView().addListener(a,g[a],h)}}}var j=this.getMainNavigationView();if(h.getItemId()!="login"&&h.xtype!="panelNotificationPhone"){this.onBackToMain()}if(j.getActiveItem().xtype!=h.xtype){var d=j.getActiveItem();var c=j.getInnerItems().indexOf(d);if(h.xtype=="loginPhone"&&c!=0){d.getController().openView(h,b)}else{j.add(h);if(Ext.os.is.iOS&&Ext.os.version.major>=7){Ext.select(".p-toolbar-container").applyStyles("height: 62px; padding-top: 15px;")}j.animateActiveItem(h,{type:"slide",direction:"left",duration:100,listeners:{animationend:function(){f.onAnimationEnded(h)}}})}}if(h.getItemId().indexOf("panelNotificationPhone")>0){this.openNotificationsPhone(h)}else{this.getMenuBar().getController().disableButtonNotificationPhone(false)}},onAnimationEnded:function(a){if(a&&a.getController()["onLoadData"]){Ext.callback(a.getController().onLoadData,a.getController(),[],1)}},onActiveViewChange:function(c,b,d,e){var a=c.getInnerItems().indexOf(c.getActiveItem());if(a==0||a==2){c.removeAt(1)}},onRequestChangeViewDelay:function(a,b){var c=this;c.getView().setMasked({xtype:"loadmask"});Ext.callback(function(){c.openView(a,b);c.getView().setMasked(false)},c,[],1)},onRequestChangeView:function(a,b){this.openView(a,b)},onUpdateCurrentUser:function(b,e){this.setCurrentUser(b);Deft.Injector.configure({currentUser:{value:b}});if(!b.isLogged()){this.getMenuBar().getController().setTextButtonNotificationPhone(0);this.getMenuBar().getController().setTextButtonShoppingCartPhone(0)}this.getViewWithBanner().getController().updateViewForUser(b);this.setCountLoad(0);if(b.isLogged()){this.onUpdateMySchedule(e)}else{var d=Personify.utils.ServiceManager.getStoreManager();var c=d.getAgendaStore();var a=Ext.create(c);a.setStoreId("agendaStoreListMain")}this.onUpdateEventList(e);this.onLoadShoppingCartStore(e);this.updateStoreNotification(e)},callbackUpdateUser:function(b){var a=this.getCountLoad();a++;this.setCountLoad(a);if(a==this.getMaxCount()){if(b&&typeof b=="function"){b(true)}}},updateStoreNotification:function(g){var d=this,a=d.getCurrentUser(),e=d.getNotificationStore();if(a.isLogged()){var b=a.get("masterCustomerId"),f=a.get("subCustomerId"),c={MasterCustomerID:b,SubCustomerID:f};e.setDataRequest(c);e.load({callback:function(j,i,k){d.callbackUpdateUser(g);d.updateDataLocalNotificationPhone(e);var h=new Ext.util.DelayedTask(function(){d.updateStoreNotification()});var l=Personify.utils.Configuration.getConfiguration().getAt(0).HomeStore.get("notificationRefreshInterval");h.delay(l*60*1000)}})}else{e.removeAll();d.updateDataLocalNotificationPhone(e);d.callbackUpdateUser(g)}},openNotificationsPhone:function(b){var c=this,a=c.getCurrentUser(),d=c.getNotificationStore();if(a.isLogged()){b.getController().getNotificationsPhone().getController().getListNotificationPhone().setStore(d);c.getMenuBar().getController().disableButtonNotificationPhone(true)}else{Personify.utils.ItemUtil.needToLogin();return}},updateDataLocalNotificationPhone:function(c){var b=this,a=0;Personify.utils.Sqlite.getNotification(function(d){if(typeof d=="object"&&d.length>0){for(var e=0;e<d.length;e++){c.each(function(g){if(g.get("messageId")==d[e].messageId){if(d[e].isDeleted==1){c.remove(g)}else{g.set("isRead",true);a++}}})}}var f=c.getCount()-a;b.getMenuBar().getController().setTextButtonNotificationPhone(f)})},setTextNotiBtnPhone:function(a){var b=this.getNotificationStore();this.getMenuBar().getController().setTextButtonNotificationPhone(b.getCount()-a)},enableBtnOpenNotificationPhone:function(){this.getMenuBar().getController().disableButtonNotificationPhone(false)},onBack:function(){var a=this,b=a.getMainNavigationView();b.animateActiveItem(0,{type:"slide",direction:"right"});if(b.getActiveItem().getItemId().indexOf("panelNotificationPhone")>0){a.getMenuBar().getController().disableButtonNotificationPhone(true)}},onLogout:function(){var a=Personify.utils.ServiceManager.getModelManager();var d=a.getUserModel();var c=Ext.create(d);Deft.Injector.configure({currentUser:{value:c}});if(window.plugins.applicationPreferences){window.plugins.applicationPreferences.set("keepUserLogin","",function(){},function(){})}if(window.plugins.pushNotification){var b=window.plugins.pushNotification;b.setAlias("")}Personify.utils.Sqlite.invalidateProfileCache();Personify.utils.Configuration.setCurrentUser(c);Personify.utils.Configuration.setDiscussionUrl(null);this.onUpdateCurrentUser(c);this.onBackToMainDelay()},onBackToMain:function(){var a=this,b=a.getMainNavigationView();b.animateActiveItem(0,{type:"slide",direction:"right"});a.getMenuBar().getController().disableButtonNotificationPhone(false)},onBackToMainDelay:function(){var a=this,b=a.getMainNavigationView();a.getView().setMasked({xtype:"loadmask"});Ext.callback(function(){b.animateActiveItem(0,{type:"slide",direction:"right"});a.getMenuBar().getController().disableButtonNotificationPhone(false);a.getView().setMasked(false)},a,[],500)},onUpdateEventList:function(k){var f=this;var b=Personify.utils.Configuration.getCurrentUser();var d={IsStaffMember:b?b.isStaffMember().toString():false,IsMember:true,FromMonth:"1",ToMonth:"12",OrgID:b.get("organizationId"),OrgUnitID:b.get("organizationUnitId"),MasterCustomerID:(b&&b.isLogged())?b.get("masterCustomerId"):"",SubCustomerID:(b&&b.isLogged())?b.get("subCustomerId"):"0"};var a=Personify.utils.ServiceManager.getStoreManager();var c=a.getICalendarStore();var i=Ext.create(c);var g=Ext.create(c);var j=a.getEventListStore();var h=Ext.create(j);var e=Ext.getStore("agendaStoreListMain");h.setStoreId("meetingListtingMain");g.setStoreId("iCalendarStoreMain");i.setDataRequest(d);i.load({callback:function(m,l,n){f.getView().setMasked(false);f.callbackUpdateUser(k);if(n){i.each(function(o){g.add(o)});i.getAt(0).EventListStore.each(function(o){if(e){for(var p=0;p<e.getCount();p++){var q=e.getAt(p);if(q.get("type")!="PERSONAL"){if(!q.get("sessionID")||q.get("sessionID")==""||q.get("sessionID")=="0"){if(q.get("meetingId")==o.get("productID")){if(!o.get("isAdded")){o.set("isAdded",true)}break}}}}}h.add(o)})}},scope:this})},onUpdateMySchedule:function(h,b){var f=this;var a=Personify.utils.Configuration.getCurrentUser();var g=Personify.utils.ServiceManager.getStoreManager();var e=g.getAgendaStore();var d=Ext.create(e);d.setStoreId("agendaStoreListMain");if(a&&a.isLogged()){if(window.plugins.app47){window.plugins.app47.sendGenericEvent("Agenda List")}var c={MasterCustomerID:a?a.get("masterCustomerId"):"",SubCustomerID:a?a.get("subCustomerId"):"",MeetingID:""};d.setDataRequest(c);d.load({callback:function(j,i,k){if(k){if(h&&b&&typeof h==="function"){h(k,b,j)}else{f.callbackUpdateUser(h)}}else{f.callbackUpdateUser(h)}f.getView().setMasked(false)},scope:this})}else{f.callbackUpdateUser(h);d.setData([])}},getObjectDelectMeetingAgenda:function(d,h){Ext.Viewport.setMasked({xtype:"loadmask"});var g=this;var f={type:"ajax",method:"GET",url:Personify.utils.ServiceManager.getUrlWS("eventGetDeleteMeetingAgenda")+d.get("appointmentId"),headers:Personify.utils.ServiceManager.getHeaders(),reader:{type:"json",rootProperty:"d"}};var a=Personify.utils.ServiceManager.getStoreManager();var b="";var e="";if(d.get("eventType")){b=Personify.utils.ItemUtil.convertStringToDate(d.get("startDateTimeString"));e=Personify.utils.ItemUtil.convertStringToDate(d.get("endDateTimeString"))}else{if(d.get("startDateTimeString")){b=Personify.utils.ItemUtil.convertStringToDateSession(d.get("startDateTimeString"));e=Personify.utils.ItemUtil.convertStringToDateSession(d.get("endDateTimeString"))}else{b=Personify.utils.ItemUtil.convertStringToDateSession(d.get("startDateTime"));e=Personify.utils.ItemUtil.convertStringToDateSession(d.get("endDateTime"))}}var i=a.getObjectDeleteMeetingAgenda();var c=Ext.create(i);c.setProxy(f);c.load({callback:function(m,l,o){if(m.length>0){var j=Personify.utils.Configuration.getCurrentUser();var n=m[0];var k={EntityGUID:n.get("entityGUID"),AppointmentId:n.get("appointmentId"),OrganizationId:n.get("organizationId"),OrganizationUnitId:n.get("organizationUnitId"),MasterCustomerId:j.get("masterCustomerId"),SubCustomerId:j.get("subCustomerId"),AddedBy:n.get("addedBy"),ChangedBy:n.get("changedBy"),AddedOn:Personify.utils.ItemUtil.formatDateMSMySchedule(n.get("addedOn")),AppointmentDescription:d.get("description"),AppointmentEndDateTime:e,AppointmentStartDateTime:b,AppointmentTitle:d.get("title"),AppointmentTypeCodeString:"Meeting",AvailableToOrders:n.get("availableToOrders"),ChangedBy:"",ChangedOn:Ext.Date.format(new Date(),"c"),ConcurrencyId:n.get("concurrencyId"),MeetingParentProductCode:"",MeetingProductCode:"",MeetingProductId:d.get("meetingId"),SessionFee:d.get("price"),sessionLocation:d.get("location"),SessionParentProductCode:"",SessionProductCode:"",SessionProductId:d.get("sessionID"),SessionTrackCode:"",SessionTypeCode:"",SpeakerName:""};g.saveDeleteMeetingAgenda(k,d,h)}else{Ext.Msg.alert("","Cannot get agenda information to delete.");Ext.Viewport.setMasked(false)}},scope:this})},saveDeleteMeetingAgenda:function(d,b,g){var e=this;var f=Personify.utils.ServiceManager.getStoreManager();var c=f.getSaveDeleteMeetingAgenda();var a=Ext.create(c);a.setDataRequest(d);a.load({callback:function(k,j,n){if(n){e.onUpdateMySchedule(g,true);var m=Ext.getStore("meetingListtingMain");if(m){for(var l=0;l<m.getCount();l++){var h=m.getAt(l);if(b.get("type")!="PERSONAL"){if(!b.get("sessionID")||b.get("sessionID")==""||b.get("sessionID")=="0"){if(b.get("meetingId")==h.get("productID")){if(h.get("isAdded")){h.set("isAdded",false)}break}}}}}}else{Ext.Msg.alert("","Error occurred while deleting agenda.");Ext.Viewport.setMasked(false)}},scope:this})},addNewCustomerMeetingAgenda:function(b,c,f){if(!Personify.utils.PhoneGapHelper.checkConnection()){Ext.Msg.alert("Connection","Please check your internet connection.",Ext.emptyFn);return}Ext.Viewport.setMasked({xtype:"loadmask"});var d=this;var a=Personify.utils.Configuration.getCurrentUser();var e=b.get("sessionID");if(e){a.addSessionToSchedule(b,c).then({success:function(h){var g=true;if(h){g=h.get("appointmentId")}d.onUpdateMySchedule(f,g)},failure:function(){Ext.Msg.alert("","Error occurred while adding to your schedule.")}}).always(function(){Ext.Viewport.setMasked(false)})}else{a.addEventToSchedule(b).then({success:function(h){var g=true;if(h){g=h.get("appointmentId")}d.onUpdateMySchedule(f,g)},failure:function(){Ext.Msg.alert("","Error occurred while adding to your schedule.")}}).always(function(){Ext.Viewport.setMasked(false)})}},onLoadShoppingCartStore:function(g){var e=this,b=Personify.utils.Configuration.getCurrentUser(),c=null,a=null,f=this.getShoppingCartStore();if(b&&b.isLogged()){c=b.get("masterCustomerId"),a=b.get("subCustomerId");var d={MasterCustomerId:c,SubCustomerId:a};f.setDataRequest(d);f.load({callback:function(j,i,k){if(k){e.callbackUpdateUser(g);Deft.Injector.configure({shoppingCartStore:{value:f}})}else{var h=new Ext.util.DelayedTask(function(){e.onLoadShoppingCartStore(g)},e);h.delay(30*1000);e.callbackUpdateUser(g)}}})}else{e.callbackUpdateUser(g)}},onTapCartItemCheckout:function(){var b=this;if(!Personify.utils.PhoneGapHelper.checkConnection()){Ext.Msg.alert("Connection","Please check your internet connection.",Ext.emptyFn);return}if(window.plugins.app47){window.plugins.app47.sendGenericEvent("View Shopping Cart")}var a=Personify.utils.Configuration.getCurrentUser();if(a&&a.isLogged()){Ext.Viewport.setMasked({xtype:"loadmask"});a.loadShoppingCartUrl().then({success:function(c){var d=null;if(window.plugins.childBrowser){window.plugins.childBrowser.clearCookies()}if(Ext.os.is.Android){d=window.open(c,"_blank","location=yes,enableViewportScale=yes")}else{d=window.open(c,"_blank","location=no,enableViewportScale=yes")}d.addEventListener("exit",function(){Ext.callback(b.setTotalItemCheckout,b)})},failure:function(){Ext.Msg.alert("","Cannot check out shopping cart.")}}).always(function(){Ext.Viewport.setMasked(false)})}else{Personify.utils.ItemUtil.needToLogin()}},setTotalItemCheckout:function(){var e=this,b=Personify.utils.Configuration.getCurrentUser(),c=null,a=null;if(b&&b.isLogged()){c=b.get("masterCustomerId"),a=b.get("subCustomerId");var f=e.getShoppingCartStore(),d={MasterCustomerId:c,SubCustomerId:a};f.setDataRequest(d);f.load({callback:function(h,g,i){Deft.Injector.configure({shoppingCartStore:{value:f}})}})}}});