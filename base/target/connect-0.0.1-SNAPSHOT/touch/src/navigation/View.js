Ext.define("Ext.navigation.View",{extend:"Ext.Container",alternateClassName:"Ext.NavigationView",xtype:"navigationview",requires:["Ext.navigation.Bar"],config:{baseCls:Ext.baseCSSPrefix+"navigationview",navigationBar:{docked:"top"},defaultBackButtonText:"Back",useTitleForBackButtonText:false,layout:{type:"card",animation:{duration:300,easing:"ease-out",type:"slide",direction:"left"}}},platformConfig:[{theme:["Blackberry","Blackberry103"],navigationBar:{splitNavigation:true}}],initialize:function(){var c=this,a=c.getNavigationBar();if(a){a.on({back:c.onBackButtonTap,scope:c});c.relayEvents(a,"rightbuttontap");c.relayEvents(c,{add:"push",remove:"pop"})}var b=c.getLayout();if(b&&!b.isCard){Ext.Logger.error("The base layout for a NavigationView must always be a Card Layout")}},applyLayout:function(a){a=a||{};return a},onBackButtonTap:function(){this.pop();this.fireEvent("back",this)},push:function(a){return this.add(a)},pop:function(a){if(this.beforePop(a)){return this.doPop()}},beforePop:function(f){var e=this,g=e.getInnerItems();if(Ext.isString(f)||Ext.isObject(f)){var d=g.length-1,a;for(a=d;a>=0;a--){if((Ext.isString(f)&&Ext.ComponentQuery.is(g[a],f))||(Ext.isObject(f)&&f==g[a])){f=d-a;break}}if(!Ext.isNumber(f)){return false}}var c=g.length,b;if(!Ext.isNumber(f)||f<1){f=1}f=Math.min(f,c-1);if(f){e.getNavigationBar().beforePop(f);b=g.splice(-f,f-1);for(a=0;a<b.length;a++){this.remove(b[a])}return true}return false},doPop:function(){var b=this,c=this.getInnerItems();b.remove(c[c.length-1]);if(c.length<3&&this.$backButton){this.$backButton.hide()}if(this.$titleContainer){if(!this.$titleContainer.setTitle){Ext.Logger.error("You have selected to display a title in a component that does not                     support titles in NavigationView. Please remove the `title` configuration from your                     NavigationView item, or change it to a component that has a `setTitle` method.")}var a=c[c.length-2];this.$titleContainer.setTitle((a.getTitle)?a.getTitle():a.config.title)}return this.getActiveItem()},getPreviousItem:function(){var a=this.getInnerItems();return a[a.length-2]},updateUseTitleForBackButtonText:function(b){var a=this.getNavigationBar();if(a){a.setUseTitleForBackButtonText(b)}},updateDefaultBackButtonText:function(b){var a=this.getNavigationBar();if(a){a.setDefaultBackButtonText(b)}},onBackButtonContainerAdd:function(b,a){a.on({scope:this,show:this.refreshBackButtonContainer,hide:this.refreshBackButtonContainer});this.refreshBackButtonContainer()},onBackButtonContainerRemove:function(b,a){a.un({scope:this,show:this.refreshBackButtonContainer,hide:this.refreshBackButtonContainer});this.refreshBackButtonContainer()},refreshBackButtonContainer:function(){if(!this.$backButtonContainer){return}var c=0,a=this.$backButtonContainer,b=a.items,d;for(;c<b.length;c++){d=b.get(c);if(!d.isHidden()){this.$backButtonContainer.show();return}}this.$backButtonContainer.hide()},applyNavigationBar:function(a){var b=this;if(!a){a={hidden:true,docked:"top"}}if(a.title){delete a.title;Ext.Logger.warn("Ext.navigation.View: The 'navigationBar' configuration does not accept a 'title' property. You set the title of the navigationBar by giving this navigation view's children a 'title' property.")}a.view=this;a.useTitleForBackButtonText=this.getUseTitleForBackButtonText();if(a.splitNavigation){this.$titleContainer=this.add({docked:"top",xtype:"titlebar",ui:"light",title:this.$currentTitle||""});var c=(a.splitNavigation===true)?{}:a.splitNavigation;this.$backButtonContainer=this.add({xtype:"toolbar",docked:"bottom",hidden:true});this.$backButtonContainer.on({scope:b,add:b.onBackButtonContainerAdd,remove:b.onBackButtonContainerRemove});this.$backButton=this.$backButtonContainer.add({xtype:"button",text:"Back",hidden:true,ui:"back"});if(a.items){this.$backButtonContainer.add(a.items)}if(c.items){this.$titleContainer.add(c.items)}this.$backButton.on({scope:this,tap:this.onBackButtonTap});a={hidden:true,docked:"top"}}return Ext.factory(a,Ext.navigation.Bar,this.getNavigationBar())},updateNavigationBar:function(a,b){if(b){this.remove(b,true)}if(a){this.add(a)}},applyActiveItem:function(d,a){var b=this,c=b.getInnerItems();b.getItems();if(!b.initialized){d=c.length-1}return this.callParent([d,a])},doResetActiveItem:function(d){var a=this,c=a.getInnerItems(),b=a.getLayout().getAnimation();if(d>0){if(b&&b.isAnimation){b.setReverse(true)}a.setActiveItem(d-1);a.getNavigationBar().onViewRemove(a,c[d],d)}},doRemove:function(){var a=this.getLayout().getAnimation();if(a&&a.isAnimation){a.setReverse(false)}this.callParent(arguments)},onItemAdd:function(b,a){if(b&&b.getDocked()&&b.config.title===true){this.$titleContainer=b}this.doItemLayoutAdd(b,a);var c=this.getInitialConfig().navigationBar;if(!this.isItemsInitializing&&b.isInnerItem()){this.setActiveItem(b);if(c){this.getNavigationBar().onViewAdd(this,b,a)}if(this.$backButtonContainer){this.$backButton.show()}}if(b&&b.isInnerItem()){this.updateTitleContainerTitle((b.getTitle)?b.getTitle():b.config.title)}if(this.initialized){this.fireEvent("add",this,b,a)}},updateTitleContainerTitle:function(a){if(this.$titleContainer){if(!this.$titleContainer.setTitle){Ext.Logger.error("You have selected to display a title in a component that does not                     support titles in NavigationView. Please remove the `title` configuration from your                     NavigationView item, or change it to a component that has a `setTitle` method.")}this.$titleContainer.setTitle(a)}else{this.$currentTitle=a}},reset:function(){return this.pop(this.getInnerItems().length)}});