Ext.define("Ext.util.Format",{requires:["Ext.DateExtras"],singleton:true,defaultDateFormat:"m/d/Y",escapeRe:/('|\\)/g,trimRe:/^[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u2028\u2029\u202f\u205f\u3000]+|[\x09\x0a\x0b\x0c\x0d\x20\xa0\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u2028\u2029\u202f\u205f\u3000]+$/g,formatRe:/\{(\d+)\}/g,escapeRegexRe:/([-.*+?^${}()|[\]\/\\])/g,dashesRe:/-/g,iso8601TestRe:/\d\dT\d\d/,iso8601SplitRe:/[- :T\.Z\+]/,ellipsis:function(c,a,d){if(c&&c.length>a){if(d){var e=c.substr(0,a-2),b=Math.max(e.lastIndexOf(" "),e.lastIndexOf("."),e.lastIndexOf("!"),e.lastIndexOf("?"));if(b!=-1&&b>=(a-15)){return e.substr(0,b)+"..."}}return c.substr(0,a-3)+"..."}return c},escapeRegex:function(a){return a.replace(Ext.util.Format.escapeRegexRe,"\\$1")},escape:function(a){return a.replace(Ext.util.Format.escapeRe,"\\$1")},toggle:function(b,c,a){return b==c?a:c},trim:function(a){return a.replace(Ext.util.Format.trimRe,"")},leftPad:function(d,b,c){var a=String(d);c=c||" ";while(a.length<b){a=c+a}return a},format:function(b){var a=Ext.toArray(arguments,1);return b.replace(Ext.util.Format.formatRe,function(c,d){return a[d]})},htmlEncode:function(a){return !a?a:String(a).replace(/&/g,"&amp;").replace(/>/g,"&gt;").replace(/</g,"&lt;").replace(/"/g,"&quot;")},htmlDecode:function(a){return !a?a:String(a).replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&quot;/g,'"').replace(/&amp;/g,"&")},date:function(f,g){var b=f;if(!f){return""}if(!Ext.isDate(f)){b=new Date(Date.parse(f));if(isNaN(b)){if(this.iso8601TestRe.test(f)){if(Ext.os.is.Android&&Ext.os.version.isLessThan("3.0")){var h=[1,4,5,6,7,10,11];var e,d=0;if((e=/^(\d{4}|[+\-]\d{6})(?:-(\d{2})(?:-(\d{2}))?)?(?:T(\d{2}):(\d{2})(?::(\d{2})(?:\.(\d{3}))?)?(?:(Z)|([+\-])(\d{2})(?::(\d{2}))?)?)?$/.exec(f))){for(var c=0,a;(a=h[c]);++c){e[a]=+e[a]||0}e[2]=(+e[2]||1)-1;e[3]=+e[3]||1;if(e[8]!=="Z"&&e[9]!==undefined){d=e[10]*60+e[11];if(e[9]==="+"){d=0-d}}b=new Date(Date.UTC(e[1],e[2],e[3],e[4],e[5]+d,e[6],e[7]))}}else{b=f.split(this.iso8601SplitRe);b=new Date(b[0],b[1]-1,b[2],b[3],b[4],b[5])}}}if(isNaN(b)){b=new Date(Date.parse(f.replace(this.dashesRe,"/")));if(isNaN(b)){Ext.Logger.error("Cannot parse the passed value "+f+" into a valid date")}}f=b}return Ext.Date.format(f,g||Ext.util.Format.defaultDateFormat)}});