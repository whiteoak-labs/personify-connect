Ext.define("Ext.device.contacts.Sencha",{extend:"Ext.device.contacts.Abstract",getContacts:function(a){var b=this.getIncludeImages();if(typeof a.includeImages!="undefined"){b=a.includeImages}if(!a){Ext.Logger.warn("Ext.device.Contacts#getContacts: You must specify a `config` object.");return false}if(!a.success){Ext.Logger.warn("Ext.device.Contacts#getContacts: You must specify a `success` method.");return false}Ext.device.Communicator.send({command:"Contacts#all",callbacks:{success:function(c){a.success.call(a.scope||this,c)},failure:function(){if(a.failure){a.failure.call(a.scope||this)}}},includeImages:b,scope:this})},getThumbnail:function(a){if(!a||typeof a.id=="undefined"){Ext.Logger.warn("Ext.device.Contacts#getThumbnail: You must specify an `id` of the contact.");return false}if(!a||!a.callback){Ext.Logger.warn("Ext.device.Contacts#getThumbnail: You must specify a `callback`.");return false}Ext.device.Communicator.send({command:"Contacts#getThumbnail",callbacks:{success:function(b){this.set("thumbnail",b);if(a.callback){a.callback.call(a.scope||this,this)}}},id:id,scope:this})},getLocalizedLabel:function(a){if(!a||typeof a.label=="undefined"){Ext.Logger.warn("Ext.device.Contacts#getLocalizedLabel: You must specify an `label` to be localized.");return false}if(!a||!a.callback){Ext.Logger.warn("Ext.device.Contacts#getLocalizedLabel: You must specify a `callback`.");return false}Ext.device.Communicator.send({command:"Contacts#getLocalizedLabel",callbacks:{callback:function(b){a.callback.call(a.scope||this,b,a.label)}},label:a.label,scope:this})}});