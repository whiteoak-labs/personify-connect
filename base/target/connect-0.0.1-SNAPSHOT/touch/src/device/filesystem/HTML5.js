Ext.define("Ext.device.filesystem.HTML5",{extend:"Ext.device.filesystem.Abstract",requestFileSystem:function(b){if(!b.success){Ext.Logger.error("Ext.device.filesystem#requestFileSystem: You must specify a `success` callback.");return null}var c=this;var a=function(d){var e=Ext.create("Ext.device.filesystem.FileSystem",d);b.success.call(b.scope||c,e)};window.requestFileSystem(b.type,b.size,a,b.failure||Ext.emptyFn)}},function(){Ext.define("Ext.device.filesystem.FileSystem",{fs:null,root:null,constructor:function(a){this.fs=a;this.root=Ext.create("Ext.device.filesystem.DirectoryEntry","/",this)},getRoot:function(){return this.root}},function(){Ext.define("Ext.device.filesystem.Entry",{directory:false,path:0,fileSystem:null,entry:null,constructor:function(a,c,b){this.directory=a;this.path=c;this.fileSystem=b},isFile:function(){return !this.directory},isDirectory:function(){return this.directory},getName:function(){var b=this.path.split("/");for(var a=b.length-1;a>=0;--a){if(b[a].length>0){return b[a]}}return"/"},getFullPath:function(){return this.path},getFileSystem:function(){return this.fileSystem},getEntry:function(){return null},moveTo:function(a){if(a.parent==null){Ext.Logger.error("Ext.device.filesystem.Entry#moveTo: You must specify a new `parent` of the entry.");return null}var b=this;this.getEntry({options:a.options||{},success:function(c){a.parent.getEntry({options:a.options||{},success:function(d){if(a.copy){c.copyTo(d,a.newName,function(e){a.success.call(a.scope||b,e.isDirectory?Ext.create("Ext.device.filesystem.DirectoryEntry",e.fullPath,b.fileSystem):Ext.create("Ext.device.filesystem.FileEntry",e.fullPath,b.fileSystem))},a.failure)}else{c.moveTo(d,a.newName,function(e){a.success.call(a.scope||b,e.isDirectory?Ext.create("Ext.device.filesystem.DirectoryEntry",e.fullPath,b.fileSystem):Ext.create("Ext.device.filesystem.FileEntry",e.fullPath,b.fileSystem))},a.failure)}},failure:a.failure})},failure:a.failure})},copyTo:function(a){this.moveTo(Ext.apply(a,{copy:true}))},remove:function(a){this.getEntry({success:function(b){if(a.recursively&&this.directory){b.removeRecursively(a.success,a.failure)}else{b.remove(a.success,a.failure)}},failure:a.failure})},getParent:function(a){if(!a.success){Ext.Logger.error("Ext.device.filesystem.Entry#getParent: You must specify a `success` callback.");return null}var b=this;this.getEntry({options:a.options||{},success:function(c){c.getParent(function(d){a.success.call(a.scope||b,d.isDirectory?Ext.create("Ext.device.filesystem.DirectoryEntry",d.fullPath,b.fileSystem):Ext.create("Ext.device.filesystem.FileEntry",d.fullPath,b.fileSystem))},a.failure)},failure:a.failure})}});Ext.define("Ext.device.filesystem.DirectoryEntry",{extend:"Ext.device.filesystem.Entry",cachedDirectory:null,constructor:function(b,a){this.callParent([true,b,a])},getEntry:function(b){var d=this;var e=b.success;if((b.options&&b.options.create)&&this.path){var c=this.path.split("/");if(c[0]=="."||c[0]==""){c=c.slice(1)}var a=function(f){if(c.length){f.getDirectory(c.shift(),b.options,a,b.failure)}else{e(f)}};a(this.fileSystem.fs.root)}else{this.fileSystem.fs.root.getDirectory(this.path,b.options,function(f){b.success.call(b.scope||d,f)},b.failure)}},readEntries:function(a){if(!a.success){Ext.Logger.error("Ext.device.filesystem.DirectoryEntry#readEntries: You must specify a `success` callback.");return null}var b=this;this.getEntry({success:function(d){var c=d.createReader();c.readEntries(function(h){var f=[],g=0,e=h.length;for(;g<e;g++){entryInfo=h[g];f[g]=entryInfo.isDirectory?Ext.create("Ext.device.filesystem.DirectoryEntry",entryInfo.fullPath,b.fileSystem):Ext.create("Ext.device.filesystem.FileEntry",entryInfo.fullPath,b.fileSystem)}a.success.call(a.scope||this,f)},function(e){if(a.failure){a.failure.call(a.scope||this,e)}})},failure:a.failure})},getFile:function(b){if(b.path==null){Ext.Logger.error("Ext.device.filesystem.DirectoryEntry#getFile: You must specify a `path` of the file.");return null}var c=this;var a=this.path+b.path;var d=Ext.create("Ext.device.filesystem.FileEntry",a,this.fileSystem);d.getEntry({success:function(){b.success.call(b.scope||c,d)},options:b.options||{},failure:b.failure})},getDirectory:function(c){if(c.path==null){Ext.Logger.error("Ext.device.filesystem.DirectoryEntry#getFile: You must specify a `path` of the file.");return null}var d=this;var b=this.path+c.path;var a=Ext.create("Ext.device.filesystem.DirectoryEntry",b,this.fileSystem);a.getEntry({success:function(){c.success.call(c.scope||d,a)},options:c.options||{},failure:c.failure})},removeRecursively:function(a){this.remove(Ext.apply(a,{recursively:true}))}});Ext.define("Ext.device.filesystem.FileEntry",{extend:"Ext.device.filesystem.Entry",length:0,offset:0,constructor:function(b,a){this.callParent([false,b,a]);this.offset=0;this.length=0},getEntry:function(b){var c=this;var d=Ext.applyIf({},b);if(this.fileSystem){var a=function(e){if((b.options&&b.options.create)&&Ext.isString(this.path)){var f=this.path.split("/");if(f[0]=="."||f[0]==""){f=f.slice(1)}if(f.length>1&&!b.recursive===true){f.pop();var g=Ext.create("Ext.device.filesystem.DirectoryEntry",f.join("/"),c.fileSystem);g.getEntry({options:b.options,success:function(){d.recursive=true;c.getEntry(d)},failure:b.failure})}else{if(b.failure){b.failure.call(b.scope||c,e)}}}else{if(b.failure){b.failure.call(b.scope||c,e)}}};this.fileSystem.fs.root.getFile(this.path,b.options||null,function(e){e.file(function(f){c.length=f.size;d.success.call(b.scope||c,e)},function(f){a.call(b.scope||c,f)})},function(e){a.call(b.scope||c,e)})}else{b.failure({code:-1,message:"FileSystem not Initialized"})}},getOffset:function(){return this.offset},seek:function(a){if(a.offset==null){Ext.Logger.error("Ext.device.filesystem.FileEntry#seek: You must specify an `offset` in the file.");return null}this.offset=a.offset||0;if(a.success){a.success.call(a.scope||this)}},read:function(a){var b=this;this.getEntry({success:function(c){c.file(function(e){if(Ext.isNumber(a.length)){if(Ext.isFunction(e.slice)){e=e.slice(b.offset,a.length)}else{if(a.failure){a.failure.call(a.scope||b,{code:-2,message:"File missing slice functionality"})}return}}var d=new FileReader();d.onloadend=function(f){a.success.call(a.scope||b,f.target.result)};d.onerror=function(f){a.failure.call(a.scope||b,f)};if(a.reader){d=Ext.applyIf(d,a.reader)}a.encoding=a.encoding||"UTF8";switch(a.type){default:case"text":d.readAsText(e,a.encoding);break;case"dataURL":d.readAsDataURL(e);break;case"binaryString":d.readAsBinaryString(e);break;case"arrayBuffer":d.readAsArrayBuffer(e);break}},function(d){a.failure.call(a.scope||b,d)})},failure:function(c){a.failure.call(a.scope||b,c)}})},write:function(a){if(a.data==null){Ext.Logger.error("Ext.device.filesystem.FileEntry#write: You must specify `data` to write into the file.");return null}var b=this;this.getEntry({options:a.options||{},success:function(c){c.createWriter(function(d){d.onwriteend=function(e){b.length=e.target.length;a.success.call(a.scope||b,e.result)};d.onerror=function(e){a.failure.call(a.scope||b,e)};if(a.writer){d=Ext.applyIf(d,a.writer)}if(b.offset){d.seek(b.offset)}else{if(a.append){d.seek(b.length)}}b.writeData(d,a.data)},function(d){a.failure.call(a.scope||b,d)})},failure:function(c){a.failure.call(a.scope||b,c)}})},writeData:function(b,a){b.write(new Blob([a]))},truncate:function(a){if(a.size==null){Ext.Logger.error("Ext.device.filesystem.FileEntry#write: You must specify a `size` of the file.");return null}var b=this;this.getEntry({success:function(c){c.createWriter(function(d){d.truncate(a.size);a.success.call(a.scope||b,b)},function(d){a.failure.call(a.scope||b,d)})},failure:function(c){a.failure.call(a.scope||b,c)}})}})})});