Ext.define("Ext.device.purchases.Sencha",{requires:["Ext.data.Store"],canMakePayments:function(a){if(!a.callback){Ext.Logger.error("You must specify a `callback` for `#canMakePayments` to work.");return false}Ext.device.Communicator.send({command:"Purchase#canMakePayments",callbacks:{callback:function(b){a.callback.call(a.scope||this,b)}},scope:a.scope||this})},getProducts:function(a){if(!a.success){Ext.Logger.error("You must specify a `success` callback for `#getProducts` to work.");return false}if(!a.failure){Ext.Logger.error("You must specify a `failure` callback for `#getProducts` to work.");return false}Ext.device.Communicator.send({command:"Purchase#getProducts",productInfos:JSON.stringify(a.productInfos),callbacks:{success:function(c){var b=Ext.create("Ext.data.Store",{model:"Ext.device.Purchases.Product",data:c});a.success.call(a.scope||this,b)},failure:a.failure},scope:a.scope||this})},getCompletedPurchases:function(a){if(!a.callback){Ext.Logger.error("You must specify a `callback` for `#getCompletedPurchases` to work.");return false}Ext.device.Communicator.send({command:"Purchase#getCompletedPurchases",callbacks:{callback:function(e){var d=e.length,c;for(c=0;c<d;c++){e[c].state="completed"}var b=Ext.create("Ext.data.Store",{model:"Ext.device.purchases.Purchase",data:e});a.callback.call(a.scope||this,b)}},scope:a.scope||this})},getPurchases:function(a){if(!a.callback){Ext.Logger.error("You must specify a `callback` for `#getPurchases` to work.");return false}Ext.device.Communicator.send({command:"Purchase#getPurchases",callbacks:{callback:function(e){var d=e.length,c;for(c=0;c<d;c++){e[c].state="charged"}var b=Ext.create("Ext.data.Store",{model:"Ext.device.purchases.Purchase",data:e});a.callback.call(a.scope||this,b)}},scope:a.scope||this})}},function(){Ext.define("Ext.device.Purchases.Product",{extend:"Ext.data.Model",config:{fields:["productIdentifier","localizedTitle","price","localizedDescription"]},purchase:function(a){if(!a.success){Ext.Logger.error("You must specify a `success` callback for `#purchase` to work.");return false}if(!a.failure){Ext.Logger.error("You must specify a `failure` callback for `#purchase` to work.");return false}Ext.device.Communicator.send({command:"Purchase#purchase",identifier:this.get("productIdentifier"),callbacks:{success:a.success,failure:a.failure},scope:a.scope||this})}});Ext.define("Ext.device.purchases.Purchase",{extend:"Ext.data.Model",config:{fields:["productIdentifier","transactionIdentifier","state"]},complete:function(a){var b=this;if(!a.success){Ext.Logger.error("You must specify a `success` callback for `#complete` to work.");return false}if(!a.failure){Ext.Logger.error("You must specify a `failure` callback for `#complete` to work.");return false}if(this.get("state")!="charged"){a.failure.call(a.scope||this,"purchase is not charged")}Ext.device.Communicator.send({command:"Purchase#complete",identifier:b.get("transactionIdentifier"),callbacks:{success:function(){b.set("state","completed");a.success.call(a.scope||this)},failure:function(){b.set("state","charged");a.failure.call(a.scope||this)}},scope:a.scope||this})}})});