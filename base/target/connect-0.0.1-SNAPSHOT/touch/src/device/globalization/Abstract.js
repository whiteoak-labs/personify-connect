Ext.define("Ext.device.globalization.Abstract",{mixins:["Ext.mixin.Observable"],config:{formatLength:"full",selector:"date and time",dateType:"wide",items:"months",numberType:"decimal",currencyCode:"USD"},getPreferredLanguage:function(a){if(!a.success){Ext.Logger.warn("You need to specify a `success` function for #getPreferredLanguage")}return a},getLocaleName:function(a){if(!a.success){Ext.Logger.warn("You need to specify a `success` function for #getLocaleName")}return a},dateToString:function(b){var a=Ext.device.globalization.Abstract.prototype.config;b=Ext.applyIf(b,{date:new Date(),formatLength:a.formatLength,selector:a.selector});if(!b.success){Ext.Logger.warn("You need to specify a `success` function for #dateToString")}return b},stringToDate:function(b){var a=Ext.device.globalization.Abstract.prototype.config;b=Ext.applyIf(b,{dateString:Ext.util.Format.date(new Date(),"m/d/Y"),formatLength:a.formatLength,selector:a.selector});if(!b.success){Ext.Logger.warn("You need to specify a `success` function for #stringToDate")}return b},getDatePattern:function(b){var a=Ext.device.globalization.Abstract.prototype.config;b=Ext.applyIf(b,{formatLength:a.formatLength,selector:a.selector});if(!b.success){Ext.Logger.warn("You need to specify a `success` function for #getDatePattern")}return b},getDateNames:function(b){var a=Ext.device.globalization.Abstract.prototype.config;b=Ext.applyIf(b,{type:a.dateType,items:a.items});if(!b.success){Ext.Logger.warn("You need to specify a `success` function for #getDateNames")}return b},isDayLightSavingsTime:function(a){a=Ext.applyIf(a,{date:new Date()});if(!a.success){Ext.Logger.warn("You need to specify a `success` function for #isDayLightSavingsTime")}return a},getFirstDayOfWeek:function(a){if(!a.success){Ext.Logger.warn("You need to specify a `success` function for #getFirstDayOfWeek")}return a},numberToString:function(b){var a=Ext.device.globalization.Abstract.prototype.config;b=Ext.applyIf(b,{number:a.number,type:a.numberType});if(!b.number){Ext.Logger.warn("You need to specify a `number` for #numberToString")}if(!b.success){Ext.Logger.warn("You need to specify a `success` function for #numberToString")}return b},stringToNumber:function(b){var a=Ext.device.globalization.Abstract.prototype.config;b=Ext.applyIf(b,{type:a.numberType});if(!b.number){Ext.Logger.warn("You need to specify a `string` for #stringToNumber")}if(!b.success){Ext.Logger.warn("You need to specify a `success` function for #stringToNumber")}return b},getNumberPattern:function(b){var a=Ext.device.globalization.Abstract.prototype.config;b=Ext.applyIf(b,{type:a.numberType});if(!b.success){Ext.Logger.warn("You need to specify a `success` function for #getNumberPattern")}return b},getCurrencyPattern:function(b){var a=Ext.device.globalization.Abstract.prototype.config;b=Ext.applyIf(b,{currencyCode:a.currencyCode});if(!b.success){Ext.Logger.warn("You need to specify a `success` function for #getCurrency")}return b}});