Ext.define("Ext.data.association.BelongsTo",{extend:"Ext.data.association.Association",alternateClassName:"Ext.data.BelongsToAssociation",alias:"association.belongsto",config:{foreignKey:undefined,getterName:undefined,setterName:undefined,instanceName:undefined},applyForeignKey:function(a){if(!a){a=this.getAssociatedName().toLowerCase()+"_id"}return a},updateForeignKey:function(b,d){var a=this.getOwnerModel().getFields(),c=a.get(b);if(!c){c=new Ext.data.Field({name:b});a.add(c);a.isDirty=true}if(d){c=a.get(d);if(c){a.isDirty=true;a.remove(c)}}},applyInstanceName:function(a){if(!a){a=this.getAssociatedName()+"BelongsToInstance"}return a},applyAssociationKey:function(a){if(!a){var b=this.getAssociatedName();a=b[0].toLowerCase()+b.slice(1)}return a},applyGetterName:function(a){if(!a){var b=this.getAssociatedName();a="get"+b[0].toUpperCase()+b.slice(1)}return a},applySetterName:function(a){if(!a){var b=this.getAssociatedName();a="set"+b[0].toUpperCase()+b.slice(1)}return a},updateGetterName:function(b,c){var a=this.getOwnerModel().prototype;if(c){delete a[c]}if(b){a[b]=this.createGetter()}},updateSetterName:function(b,c){var a=this.getOwnerModel().prototype;if(c){delete a[c]}if(b){a[b]=this.createSetter()}},createSetter:function(){var d=this,c=d.getForeignKey(),f=d.getAssociatedModel(),e,a,b;return function(k,i,j){var h=d.getInverseAssociation(),g=this;if(k&&k.isModel){k=k.getId()}if(Ext.isFunction(i)){i={callback:i,scope:j||g}}delete g[d.getInstanceName()];e=Ext.data.Model.cache[Ext.data.Model.generateCacheId(f.modelName,this.get(c))];a=Ext.data.Model.cache[Ext.data.Model.generateCacheId(f.modelName,k)];g.set(c,k);if(h){if(a){if(h.getType().toLowerCase()==="hasmany"){b=a[h.getName()]();b.add(g)}else{a[h.getInstanceName()]=g}}if(e){if(h.getType().toLowerCase()==="hasmany"){b=e[h.getName()]();b.remove(g)}else{delete k[h.getInstanceName()]}}}if(a){g[d.getInstanceName()]=a}if(Ext.isObject(i)){return g.save(i)}return g}},createGetter:function(){var c=this,d=c.getAssociatedModel(),b=c.getForeignKey(),a=c.getInstanceName();return function(h,i){h=h||{};var g=this,j=g.get(b),k,e,f;e=g[a];if(!e){e=Ext.data.Model.cache[Ext.data.Model.generateCacheId(d.modelName,j)];if(e){g[a]=e}}if(h.reload===true||e===undefined){if(typeof h=="function"){h={callback:h,scope:i||g}}k=h.success;h.success=function(l){g[a]=l;if(k){k.apply(this,arguments)}};d.load(j,h)}else{f=[e];i=i||g;Ext.callback(h,i,f);Ext.callback(h.success,i,f);Ext.callback(h.failure,i,f);Ext.callback(h.callback,i,f);return e}}},read:function(b,a,c){b[this.getInstanceName()]=a.read([c]).getRecords()[0]},getInverseAssociation:function(){var b=this.getOwnerModel().modelName,a=this.getForeignKey();return this.getAssociatedModel().associations.findBy(function(d){var c=d.getType().toLowerCase();return(c==="hasmany"||c==="hasone")&&d.getAssociatedModel().modelName===b&&d.getForeignKey()===a})}});