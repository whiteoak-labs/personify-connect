Ext.define("Ext.data.writer.Writer",{alias:"writer.base",alternateClassName:["Ext.data.DataWriter","Ext.data.Writer"],config:{writeAllFields:true,nameProperty:"name"},constructor:function(a){this.initConfig(a)},write:function(e){var c=e.getOperation(),b=c.getRecords()||[],a=b.length,d=0,f=[];for(;d<a;d++){f.push(this.getRecordData(b[d]))}return this.writeRecords(e,f)},writeDate:function(c,b){if(!b){return null}var a=c.getDateFormat()||"timestamp";switch(a){case"timestamp":return b.getTime()/1000;case"time":return b.getTime();default:return Ext.Date.format(b,a)}},getRecordData:function(e){var j=e.phantom===true,b=this.getWriteAllFields()||j,c=this.getNameProperty(),f=e.getFields(),d={},h,a,g,k,i;if(b){f.each(function(l){if(l.getPersist()){a=l.config[c]||l.getName();i=e.get(l.getName());if(l.getType().type=="date"){i=this.writeDate(l,i)}d[a]=i}},this)}else{h=e.getChanges();for(k in h){if(h.hasOwnProperty(k)){g=f.get(k);if(g.getPersist()){a=g.config[c]||g.getName();i=h[k];if(g.getType().type=="date"){i=this.writeDate(g,i)}d[a]=i}}}if(!j){d[e.getIdProperty()]=e.getId()}}return d},onClassExtended:function(c,g,b){var e=this,a=e.prototype.config,d=g.config||{},f;for(f in a){if(f in g){d[f]=g[f];delete g[f];Ext.Logger.deprecate(f+" is deprecated as a property directly on the Writer prototype. Please put it inside the config object.")}}g.config=d}});