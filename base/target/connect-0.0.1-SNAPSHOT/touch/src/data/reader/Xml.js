Ext.define("Ext.data.reader.Xml",{extend:"Ext.data.reader.Reader",alternateClassName:"Ext.data.XmlReader",alias:"reader.xml",config:{record:null},createAccessor:function(b){var a=this;if(Ext.isEmpty(b)){return Ext.emptyFn}if(Ext.isFunction(b)){return b}return function(c){return a.getNodeValue(Ext.DomQuery.selectNode(b,c))}},getNodeValue:function(a){if(a&&a.firstChild){return a.firstChild.nodeValue}return undefined},getResponseData:function(a){if(a.nodeType===1||a.nodeType===9){return a}var b=a.responseXML;if(!b){this.fireEvent("exception",this,a,"XML data not found in the response");Ext.Logger.warn("XML data not found in the response")}return b},getData:function(a){return a.documentElement||a},getRoot:function(b){var c=b.nodeName,a=this.getRootProperty();if(!a||(c&&c==a)){return b}else{if(Ext.DomQuery.isXml(b)){return Ext.DomQuery.selectNode(a,b)}}},extractData:function(a){var b=this.getRecord();if(!b){Ext.Logger.error("Record is a required parameter")}if(b!=a.nodeName&&b!==a.localName){a=Ext.DomQuery.select(b,a)}else{a=[a]}return this.callParent([a])},getAssociatedDataRoot:function(b,a){return Ext.DomQuery.select(a,b)[0]},readRecords:function(a){if(Ext.isArray(a)){a=a[0]}return this.callParent([a])},createFieldAccessExpression:function(e,d,c){var b=e.getMapping()||e.getName(),a;if(typeof b==="function"){a=d+".getMapping()("+c+", this)"}else{b=b.split("@");if(b.length===2&&b[0]){a='me.getNodeValue(Ext.DomQuery.selectNode("@'+b[1]+'", Ext.DomQuery.selectNode("'+b[0]+'", '+c+")))"}else{if(b.length===2){a='me.getNodeValue(Ext.DomQuery.selectNode("@'+b[1]+'", '+c+"))"}else{if(b.length===1){a='me.getNodeValue(Ext.DomQuery.selectNode("'+b[0]+'", '+c+"))"}else{throw"Unsupported query - too many queries for attributes in "+b.join("@")}}}}return a}});