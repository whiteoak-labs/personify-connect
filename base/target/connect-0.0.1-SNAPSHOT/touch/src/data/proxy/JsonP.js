Ext.define("Ext.data.proxy.JsonP",{extend:"Ext.data.proxy.Server",alternateClassName:"Ext.data.ScriptTagProxy",alias:["proxy.jsonp","proxy.scripttag"],requires:["Ext.data.JsonP"],config:{defaultWriterType:"base",callbackKey:"callback",recordParam:"records",autoAppendParams:true},doRequest:function(a,g,b){var e=a.getAction();if(e!=="read"){Ext.Logger.error("JsonP proxies can only be used to read data.")}var d=this,c=d.buildRequest(a),f=c.getParams();c.setConfig({callbackKey:d.getCallbackKey(),timeout:d.getTimeout(),scope:d,callback:d.createRequestCallback(c,a,g,b)});if(d.getAutoAppendParams()){c.setParams({})}c.setJsonP(Ext.data.JsonP.request(c.getCurrentConfig()));c.setParams(f);a.setStarted();d.lastRequest=c;return c},createRequestCallback:function(d,a,e,b){var c=this;return function(h,f,g){delete c.lastRequest;c.processResponse(h,a,d,f,e,b)}},setException:function(b,a){b.setException(b.getRequest().getJsonP().errorType)},buildUrl:function(f){var e=this,a=e.callParent(arguments),h=Ext.apply({},f.getParams()),d=h.filters,c,b,g;delete h.filters;if(e.getAutoAppendParams()){a=Ext.urlAppend(a,Ext.Object.toQueryString(h))}if(d&&d.length){for(b=0;b<d.length;b++){c=d[b];g=c.getValue();if(g){a=Ext.urlAppend(a,c.getProperty()+"="+g)}}}return a},destroy:function(){this.abort();this.callParent(arguments)},abort:function(){var a=this.lastRequest;if(a){Ext.data.JsonP.abort(a.getJsonP())}}});