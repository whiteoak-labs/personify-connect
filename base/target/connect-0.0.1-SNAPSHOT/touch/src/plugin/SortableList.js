Ext.define("Ext.plugin.SortableList",{extend:"Ext.Component",alias:"plugin.sortablelist",mixins:["Ext.mixin.Bindable"],config:{list:null,handleSelector:"."+Ext.baseCSSPrefix+"list-sortablehandle"},init:function(a){this.setList(a)},updateList:function(a){if(a){if(a.initialized){this.attachListeners()}else{a.on({initialize:"attachListeners",scope:this,single:true})}}},attachListeners:function(){var b=this.getList(),a=b.getScrollable().getScroller().getContainer();this.scrollerElement=a;a.onBefore({dragstart:"onScrollerDragStart",scope:this})},onScrollerDragStart:function(b,a){if(Ext.DomQuery.is(a,this.getHandleSelector())){if(!this.animating){this.onDragStart(b,a)}return false}},onDragStart:function(c){var d=Ext.getCmp(c.getTarget("."+Ext.baseCSSPrefix+"list-item").id),b=this.getList(),a=b.getStore();this.scrollerElement.on({drag:"onDrag",dragend:"onDragEnd",scope:this});this.positionMap=b.getItemMap();this.listStore=a;this.previousIndexDistance=0;this.dragRow=d;this.dragRecord=d.getRecord();this.dragRowIndex=this.currentDragRowIndex=d.$dataIndex;this.dragRowHeight=this.positionMap.getItemHeight(this.dragRowIndex);if(b.getInfinite()){this.startTranslate=this.positionMap.map[this.dragRowIndex]}else{d.translate(0,0);this.startTranslate=0}d.addCls(Ext.baseCSSPrefix+"list-item-dragging")},onDrag:function(r){var q=this.getList(),l=q.listItems,m=q.getStore().data,t=this.dragRow,g=m.getKey(t.getRecord()),n=q.getListItemInfo(),c=this.positionMap,f=0,o,s,k,j,v,u,p,b,d,a,h;this.dragRowPosition=this.startTranslate+r.deltaY;t.translate(0,this.dragRowPosition);v=c.findIndex(this.dragRowPosition+(this.dragRowHeight/2));j=q.getItemAt(v);if(j){f=v-this.currentDragRowIndex;if(f!==0){h=(f<0);for(o=0,k=Math.abs(f);o<k;o++){if(h){p=this.currentDragRowIndex-o;s=q.getItemAt(p-1)}else{p=this.currentDragRowIndex+o;s=q.getItemAt(p+1)}b=c.map[p];s.translate(0,b);d=s.getRecord();a=m.getKey(d);Ext.Array.remove(m.items,d);Ext.Array.remove(m.all,d);m.items.splice(p,0,d);m.all.splice(p,0,d);m.indices[g]=m.indices[a];m.indices[a]=p;q.updateListItem(s,p,n);s.$position=b}u=l.indexOf(t);Ext.Array.remove(l,t);l.splice(u+f,0,t);t.$dataIndex=v;t.$position=c.map[v];this.currentDragRowIndex=v}}},onDragEnd:function(){var b=this,e=this.dragRow,c=this.getList(),d=c.getListItemInfo(),a=e.$position;this.scrollerElement.un({drag:"onDrag",dragend:"onDragEnd",scope:this});this.animating=true;e.getTranslatable().on("animationend",function(){e.removeCls(Ext.baseCSSPrefix+"list-item-dragging");c.updateListItem(e,e.$dataIndex,d);e.$position=a;c.fireEvent("dragsort",c,e,this.currentDragRowIndex,this.dragRowIndex);this.animating=false},b,{single:true});e.translate(0,a,{duration:100})}});