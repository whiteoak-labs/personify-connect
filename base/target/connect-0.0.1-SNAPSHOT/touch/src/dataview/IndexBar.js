Ext.define("Ext.dataview.IndexBar",{extend:"Ext.Component",alternateClassName:"Ext.IndexBar",config:{baseCls:Ext.baseCSSPrefix+"indexbar",direction:"vertical",letters:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],ui:"alphabet",listPrefix:null},platformConfig:[{theme:["Blackberry","Blackberry103"],direction:"vertical",letters:["*","#","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"]}],itemCls:Ext.baseCSSPrefix+"",updateDirection:function(a,c){var b=this.getBaseCls();this.element.replaceCls(b+"-"+c,b+"-"+a)},getElementConfig:function(){if(Ext.theme.is.Blackberry||Ext.theme.is.Blackberry103){return{reference:"wrapper",classList:["x-centered","x-indexbar-wrapper"],children:[{reference:"indicator",classList:["x-indexbar-indicator"],hidden:true,children:[{reference:"indicatorInner",classList:["x-indexbar-indicator-inner"]}]},this.callParent()]}}else{return{reference:"wrapper",classList:["x-centered","x-indexbar-wrapper"],children:[this.callParent()]}}},updateLetters:function(c){this.innerElement.setHtml("");if(c){var b=c.length,a;for(a=0;a<b;a++){this.innerElement.createChild({html:c[a]})}}},updateListPrefix:function(a){if(a&&a.length){this.innerElement.createChild({html:a},0)}},initialize:function(){this.callParent();this.innerElement.on({touchstart:this.onTouchStart,touchend:this.onTouchEnd,dragend:this.onDragEnd,drag:this.onDrag,scope:this})},onTouchStart:function(a){a.stopPropagation();this.innerElement.addCls(this.getBaseCls()+"-pressed");this.pageBox=this.innerElement.getPageBox();this.onDrag(a)},onTouchEnd:function(a){this.onDragEnd()},onDragEnd:function(){this.innerElement.removeCls(this.getBaseCls()+"-pressed");if(this.indicator){this.indicator.hide()}},onDrag:function(d){var a=Ext.util.Point.fromEvent(d),c,b,h=this.pageBox;if(!h){h=this.pageBox=this.el.getPageBox()}if(this.getDirection()==="vertical"){if(a.y>h.bottom||a.y<h.top){return}c=Ext.Element.fromPoint(h.left+(h.width/2),a.y);b=c.getParent()==this.element;if(this.indicator){this.indicator.show();var f=this.indicator.getHeight()/2,g=a.y-this.element.getY();g=Math.min(Math.max(g,f),this.element.getHeight()-f);if(this.indicatorInner&&b){this.indicatorInner.setHtml(c.getHtml().toUpperCase())}this.indicator.setTop(g-(f))}}else{if(a.x>h.right||a.x<h.left){return}c=Ext.Element.fromPoint(a.x,h.top+(h.height/2));b=c.getParent()==this.element}if(c&&b){this.fireEvent("index",this,c.dom.innerHTML,c)}},destroy:function(){var c=this,d=Array.prototype.slice.call(c.innerElement.dom.childNodes),b=d.length,a=0;for(;a<b;a++){Ext.removeNode(d[a])}this.callParent()}},function(){Ext.deprecateMethod(this,"isHorizontal",null,"Ext.dataview.IndexBar.isHorizontal() has been removed");Ext.deprecateMethod(this,"isVertical",null,"Ext.dataview.IndexBar.isVertical() has been removed");Ext.deprecateMethod(this,"refresh",null,"Ext.dataview.IndexBar.refresh() has been removed");Ext.deprecateProperty(this,"alphabet",null,"Ext.dataview.IndexBar.alphabet has been removed");Ext.deprecateProperty(this,"itemSelector",null,"Ext.dataview.IndexBar.itemSelector has been removed");Ext.deprecateProperty(this,"store",null,"Ext.dataview.IndexBar.store has been removed")});