Ext.define("Ext.field.Number",{extend:"Ext.field.Text",xtype:"numberfield",alternateClassName:"Ext.form.Number",config:{component:{type:"number"},ui:"number"},proxyConfig:{minValue:null,maxValue:null,stepValue:null},applyPlaceHolder:function(a){this._enableNumericPlaceHolderHack=((!Ext.feature.has.NumericInputPlaceHolder)&&(!Ext.isEmpty(a)));return a},onFocus:function(a){if(this._enableNumericPlaceHolderHack){this.getComponent().input.dom.setAttribute("type","number")}this.callParent(arguments)},onBlur:function(a){if(this._enableNumericPlaceHolderHack){this.getComponent().input.dom.setAttribute("type","text")}this.callParent(arguments)},doInitValue:function(){var a=this.getInitialConfig().value;if(a){a=this.applyValue(a)}this.originalValue=a},applyValue:function(b){var a=this.getMinValue(),c=this.getMaxValue();if(Ext.isNumber(a)&&Ext.isNumber(b)){b=Math.max(b,a)}if(Ext.isNumber(c)&&Ext.isNumber(b)){b=Math.min(b,c)}b=parseFloat(b);return(isNaN(b))?"":b},getValue:function(){var a=parseFloat(this.callParent(),10);return(isNaN(a))?null:a},doClearIconTap:function(a,b){a.getComponent().setValue("");a.getValue();a.hideClearIcon()}});