Ext.define("Ext.field.Slider",{extend:"Ext.field.Field",xtype:"sliderfield",requires:["Ext.slider.Slider"],alternateClassName:"Ext.form.Slider",config:{cls:Ext.baseCSSPrefix+"slider-field",tabIndex:-1,readOnly:false},proxyConfig:{increment:1,value:0,minValue:0,maxValue:100},constructor:function(a){a=a||{};if(a.hasOwnProperty("values")){a.value=a.values}this.callParent([a]);this.updateMultipleState()},initialize:function(){this.callParent();this.getComponent().on({scope:this,change:"onSliderChange",dragstart:"onSliderDragStart",drag:"onSliderDrag",dragend:"onSliderDragEnd"})},applyComponent:function(a){return Ext.factory(a,Ext.slider.Slider)},updateComponent:function(a){this.callSuper(arguments);a.setMinValue(this.getMinValue());a.setMaxValue(this.getMaxValue())},onSliderChange:function(){this.fireEvent.apply(this,[].concat("change",this,Array.prototype.slice.call(arguments)))},onSliderDragStart:function(){this.fireEvent.apply(this,[].concat("dragstart",this,Array.prototype.slice.call(arguments)))},onSliderDrag:function(){this.fireEvent.apply(this,[].concat("drag",this,Array.prototype.slice.call(arguments)))},onSliderDragEnd:function(){this.fireEvent.apply(this,[].concat("dragend",this,Array.prototype.slice.call(arguments)))},setValues:function(a){this.setValue(a);this.updateMultipleState()},getValues:function(){return this.getValue()},reset:function(){var b=this.config,a=(this.config.hasOwnProperty("values"))?b.values:b.value;this.setValue(a)},doSetDisabled:function(a){this.callParent(arguments);this.getComponent().setDisabled(a)},updateReadOnly:function(a){this.getComponent().setReadOnly(a)},isDirty:function(){if(this.getDisabled()){return false}return this.getValue()!==this.originalValue},updateMultipleState:function(){var a=this.getValue();if(a&&a.length>1){this.addCls(Ext.baseCSSPrefix+"slider-multiple")}}});