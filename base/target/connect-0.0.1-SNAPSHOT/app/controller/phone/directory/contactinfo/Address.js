Ext.define("Personify.controller.phone.directory.contactinfo.Address",{extend:"Personify.controller.profile.Address",requires:["Personify.controller.phone.directory.contactinfo.ListInfoTemplate","Personify.view.phone.directory.contactinfo.AddressList","Personify.view.phone.directory.contactinfo.AddressEditForm"],config:{countryListStore:null,stateDictionary:true,typeList:null,typeListToRemove:null,recordsForDelete:new Array(),errorMessage:"\n- Wrong address format:",blankErrorMessage:"- Street address field cannot be empty",numberOfAddressToEdit:0,numberOfLoadedAddress:0},control:{infoContainer:{typelistchange:"onTypeListChange",deleteCommand:"onDeleteCommand",loadedAnAddress:"onLoadedAnEditForm"},infoContainerReadOnly:true,buttonAddAddress:{tap:"onTapButtonAddAddress"}},updateEditMode:function(i,j){var g=this;g.getView().setHidden(false);if(j){g.setCountryListStore(j)}g.getInfoContainer().removeAll(true,true);g.getInfoContainerReadOnly().removeAll(true,true);if(i==true){var d=new Array(),h=g.getView().getRecord(),b=Personify.utils.ServiceManager.getStoreManager(),e=b.getProfileAddressesStore(),c=Ext.create(e),k=Ext.create(e),a=h.EntryProfile.getAt(0).AddressesProfile;g.setTypeList(h.get("addressTypeList").split(","));g.setPrimaryAddressCountry(h.get("defaultCountry"));if(a&&a.getCount()>0){a.each(function(l){d.push(l.get("type"));if(l.get("canEdit")==true){c.add(l)}else{k.add(l)}if(l.get("primary")&&l.get("primary")==true){if(l.get("country")==g.getPrimaryAddressCountry()){g.setPrimaryAddressRegion(l.get("region"))}}});g.setTypeListToRemove(d)}g.setNumberOfAddressToEdit(c.getCount());if(k&&k.getCount()>0){var f=Ext.create("Personify.view.phone.directory.contactinfo.AddressList",{scrollable:null,disableSelection:true});f.setStore(k);f.on({itemtap:{fn:g.onTapAddressList,scope:g}});g.getInfoContainerReadOnly().add(f)}if(c&&c.getCount()>0){if(c){c.each(function(l){var m=Ext.create("Personify.view.phone.directory.contactinfo.AddressEditForm");m.setStateDictionary(g.getStateDictionary());m.getController().hideCountryList(false,j);m.getController().setTypeList(g.getTypeList());m.setRecord(l);g.getInfoContainer().add(m);m.getController().onCountryListChange(null,l.get("country"),l.get("country"))});g.updateTypeListForAllEditItems()}}else{Ext.Viewport.setMasked(false)}g.getButtonAddAddress().setHidden(g.checkTypeList().length==0)}else{g.setRecord(g.getView().getRecord());g.getButtonAddAddress().setHidden(true);Ext.Viewport.setMask(false)}},addEmptyItem:function(){var g=this.checkTypeList();if(g.length==0){return}var f=this.getInfoContainer();var h=Ext.create("Personify.view.phone.directory.contactinfo.AddressEditForm",{style:"margin-bottom: 20px;"});h.getController().setEmptyItem(true);h.getController().hideCountryList(false,this.getCountryListStore());var c=Personify.utils.ServiceManager.getModelManager();var b=c.getProfileAddressesModel();var d=Ext.create(b);d.set("type",g);h.getController().setTypeList(g);h.setRecord(d);this.getTypeListToRemove().push(g[0]);f.add(h);var e=this.getPrimaryAddressCountry();if(e){h.getController().setCountryForEmptyItem(e)}var a=this.getPrimaryAddressRegion();if(a){h.getController().setRegionForEmptyItem("")}},setRecord:function(a){var c=this;if(a){if(this.getIsEditing()){this.updateEditMode(true,this.getCountryListStore());return}if(a.EntryProfile.getAt(0).AddressesProfile.getCount()>0){this.getInfoContainer().removeAll(true,true);this.getInfoContainerReadOnly().removeAll(true,true);var b=Ext.create("Personify.view.phone.directory.contactinfo.AddressList",{scrollable:null,docked:"top",disableSelection:true});b.setStore(a.EntryProfile.getAt(0).AddressesProfile);b.on({itemtap:{fn:c.onTapAddressList,scope:c}});this.getInfoContainer().add(b);this.getButtonAddAddress().setHidden(true);this.getView().setHidden(false)}else{this.getView().setHidden(true)}}else{this.getButtonAddAddress().setHidden(false)}},onLoadedAnEditForm:function(){var b=this.getNumberOfLoadedAddress();var a=this.getNumberOfAddressToEdit();b++;this.setNumberOfLoadedAddress(b);if(b==a){if(Ext.Viewport.getMasked()){Ext.Viewport.setMasked(false)}}},onTapAddressList:function(h,c,g,b,f,d){var a="";if(b.get("fomatted")){a=b.get("formatted")}else{a=Personify.utils.ItemUtil.getAddress(b)}Personify.utils.ItemUtil.showAddressOnMaps(a)}});